{
  "openapi": "3.0.1",
  "info": {
    "title": "Notifications API",
    "description": "Notification service for sending email, sms and push notifications",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/v1/messages": {
      "get": {
        "tags": [
          "Track Messages APIs"
        ],
        "summary": "Retrieve messages based on filter criteria with pagination",
        "description": "Retrieve messages using filters like ProductID, OrganizationID, etc. and supports pagination",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver_id",
            "in": "query",
            "description": "Receiver ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "Creation Date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.PaginatedMessages"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "No messages found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/{message_id}": {
      "get": {
        "tags": [
          "Track Messages APIs"
        ],
        "summary": "Retrieve a specific message by MessageID",
        "description": "Get details of a message by its unique ID",
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "description": "Message ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.Message"
                }
              }
            }
          },
          "404": {
            "description": "Message not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/email": {
      "post": {
        "tags": [
          "Notification APIs"
        ],
        "summary": "Send Email notification",
        "description": "Send a new Email notification",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Notification request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.EmailNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Email notification successfully enqueued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseMessage"
                }
              }
            }
          },
          "208": {
            "description": "Provided request is duplicate and it is already accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Missing headers or invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid app name or API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error: Failed to send email notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AppNameAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/api/v1/notifications/push": {
      "post": {
        "tags": [
          "Notification APIs"
        ],
        "summary": "Send push notification",
        "description": "Send a new push notification",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Notification request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.PushNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Push notification successfully enqueued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseMessage"
                }
              }
            }
          },
          "208": {
            "description": "Provided request is duplicate and it is already accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Missing headers or invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid app name or API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error: Failed to send email notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AppNameAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/api/v1/notifications/sms": {
      "post": {
        "tags": [
          "Notification APIs"
        ],
        "summary": "Send SMS notification",
        "description": "Send a new SMS notification",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Notification request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.SmsNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "SMS notification successfully enqueued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseMessage"
                }
              }
            }
          },
          "208": {
            "description": "Provided request is duplicate and it is already accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Missing headers or invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid app name or API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error: Failed to send email notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AppNameAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/api/v1/onboarding/organizations/{productId}": {
      "post": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Onboard organizations and create respective credentials under a Product",
        "description": "Create a new organizations under a product and register to get app key the provided details",
        "requestBody": {
          "description": "Organization details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.OnboardingOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.OnboardingOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "organization"
      }
    },
    "/api/v1/onboarding/product": {
      "post": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Onboard a product with releated organizations",
        "description": "Onboard a product with releated organizations and create respective credentials",
        "requestBody": {
          "description": "Onboarding Product Request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.OnboardingProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.OnboardingProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "OnboardingProductRequest"
      }
    },
    "/api/v1/onboarding/product/{productId}": {
      "get": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Get product info with releated organizations by product id",
        "description": "Get product info with releated organizations by id",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.GetProductByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Update a product",
        "description": "Update a product properties like name, etc",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Product Request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.UpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProductRequestObj"
      },
      "patch": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Deactivation of a product",
        "description": "Deactivation of a product and all its releated organization",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Product Deactivation Request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.ActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProductActivationRequest"
      }
    },
    "/api/v1/onboarding/product/{product_id}/organization/{organization_id}": {
      "get": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Get organization info",
        "description": "Get organization info with product id",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.GetOrganizationByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Update a organization",
        "description": "Update a organization properties like name, etc",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Organization Request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.UpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "OrganizationRequestObj"
      },
      "patch": {
        "tags": [
          "Onboarding API's"
        ],
        "summary": "Deactivation of a Organization",
        "description": "Deactivation of a Organization",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Organization Deactivation Request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity.ActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity.ResponseError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "OrganizationActivationRequest"
      }
    }
  },
  "components": {
    "schemas": {
      "constant.ChannelType": {
        "type": "string",
        "enum": [
          "email",
          "sms",
          "push"
        ],
        "x-enum-varnames": [
          "EmailChannel",
          "SMSChannel",
          "PushChannel"
        ]
      },
      "constant.MessageCategory": {
        "type": "string",
        "enum": [
          "OTP",
          "PASSWORD_RESET",
          "SECURITY_ALERT",
          "TRANSACTION_ALERT",
          "PAYMENT_CONFIRMATION",
          "FRAUD_ALERT",
          "TWO_FACTOR_AUTH_PROMPT",
          "CRITICAL_SYSTEM_OUTAGE",
          "DATA_BREACH_ALERT",
          "LEGAL_NOTICE_URGENT",
          "ACCOUNT_SUSPENSION",
          "UNRECOGNIZED_DEVICE_LOGIN",
          "MFA_FAILURE",
          "API_SECURITY_ALERT",
          "ACCOUNT_COMPROMISE_WARNING",
          "DEPENDENCY_FAILURE",
          "SUBSCRIPTION_OVERDRAFT_ALERT",
          "LICENSE_VIOLATION_ALERT",
          "LEGAL_COMPLIANCE_ALERT",
          "APPLICATION_PERFORMANCE_WARNING",
          "SLA_BREACH_NOTIFICATION",
          "SERVER_MAINTENANCE_ALERT",
          "HIGH_PRIORITY_SYSTEM_ALERT_FOR_ADMINS",
          "SUBSCRIPTION_RENEWAL_REMINDER",
          "BILLING_PAYMENT_DUE_REMINDER",
          "EVENT_REMINDER",
          "ACCOUNT_INACTIVITY_ALERT",
          "ACCOUNT_UPDATE_CONFIRMATION",
          "SESSION_TIMEOUT_WARNING",
          "QUOTA_STORAGE_LIMIT_WARNING",
          "SERVICE_PLAN_UPGRADE_SUGGESTION",
          "LICENSE_EXPIRATION_ALERT",
          "FRIEND_CONTACT_REQUEST",
          "INVITATION_ACCEPTANCE",
          "PENDING_APPROVAL_REQUEST",
          "PRIVACY_POLICY_UPDATE",
          "PRODUCT_SERVICE_UPDATE",
          "DOCUMENT_UPLOAD_VERIFICATION_REMINDER",
          "REVIEW_FEEDBACK_REQUEST",
          "THIRD_PARTY_INTEGRATION_FAILURE",
          "ACCOUNT_DOWNGRADE_WARNING",
          "JOB_COMPLETION_CONFIRMATION",
          "MODERATION_ALERT",
          "WORKFLOW_TRIGGER_ALERT",
          "TASK_ASSIGNMENT",
          "ACCOUNT_CONFIRMATION_EMAIL",
          "ACCOUNT_VERIFICATION_EMAIL",
          "NEWS_UPDATE",
          "MONTHLY_WEEKLY_SUMMARY",
          "COMMUNITY_ANNOUNCEMENTS",
          "PRODUCT_RECOMMENDATIONS",
          "CONTENT_RECOMMENDATIONS",
          "PERSONALIZED_OFFERS",
          "SURVEY_FEEDBACK_REQUEST",
          "SOCIAL_ENGAGEMENT_NOTIFICATIONS",
          "USER_ONBOARDING_WELCOME",
          "TUTORIALS_TIPS",
          "ANNIVERSARY_BIRTHDAY_GREETINGS",
          "HOLIDAY_GREETINGS",
          "ACCOUNT_MILESTONE_REMINDER",
          "SEASONAL_CONTENT_SUGGESTIONS",
          "EVENT_REGISTRATION_CONFIRMATION",
          "NEW_CONTENT_LAUNCH_ALERT",
          "REWARDS_PROGRAM_UPDATE",
          "RE_ENGAGEMENT_CAMPAIGNS",
          "CART_ABANDONMENT_REMINDER",
          "PRODUCT_BACK_IN_STOCK_ALERT",
          "DISCOUNTS_FOR_INACTIVE_USERS",
          "COMMUNITY_BASED_NEWS",
          "FITNESS_GOAL_REMINDERS",
          "JOB_SUGGESTIONS"
        ],
        "x-enum-varnames": [
          "OTP",
          "PASSWORD_RESET",
          "SECURITY_ALERT",
          "TRANSACTION_ALERT",
          "PAYMENT_CONFIRMATION",
          "FRAUD_ALERT",
          "TWO_FACTOR_AUTH_PROMPT",
          "CRITICAL_SYSTEM_OUTAGE",
          "DATA_BREACH_ALERT",
          "LEGAL_NOTICE_URGENT",
          "ACCOUNT_SUSPENSION",
          "UNRECOGNIZED_DEVICE_LOGIN",
          "MFA_FAILURE",
          "API_SECURITY_ALERT",
          "ACCOUNT_COMPROMISE_WARNING",
          "DEPENDENCY_FAILURE",
          "SUBSCRIPTION_OVERDRAFT_ALERT",
          "LICENSE_VIOLATION_ALERT",
          "LEGAL_COMPLIANCE_ALERT",
          "APPLICATION_PERFORMANCE_WARNING",
          "SLA_BREACH_NOTIFICATION",
          "SERVER_MAINTENANCE_ALERT",
          "HIGH_PRIORITY_SYSTEM_ALERT_FOR_ADMINS",
          "SUBSCRIPTION_RENEWAL_REMINDER",
          "BILLING_PAYMENT_DUE_REMINDER",
          "EVENT_REMINDER",
          "ACCOUNT_INACTIVITY_ALERT",
          "ACCOUNT_UPDATE_CONFIRMATION",
          "SESSION_TIMEOUT_WARNING",
          "QUOTA_STORAGE_LIMIT_WARNING",
          "SERVICE_PLAN_UPGRADE_SUGGESTION",
          "LICENSE_EXPIRATION_ALERT",
          "FRIEND_CONTACT_REQUEST",
          "INVITATION_ACCEPTANCE",
          "PENDING_APPROVAL_REQUEST",
          "PRIVACY_POLICY_UPDATE",
          "PRODUCT_SERVICE_UPDATE",
          "DOCUMENT_UPLOAD_VERIFICATION_REMINDER",
          "REVIEW_FEEDBACK_REQUEST",
          "THIRD_PARTY_INTEGRATION_FAILURE",
          "ACCOUNT_DOWNGRADE_WARNING",
          "JOB_COMPLETION_CONFIRMATION",
          "MODERATION_ALERT",
          "WORKFLOW_TRIGGER_ALERT",
          "TASK_ASSIGNMENT",
          "ACCOUNT_CONFIRMATION_EMAIL",
          "ACCOUNT_VERIFICATION_EMAIL",
          "NEWS_UPDATE",
          "MONTHLY_WEEKLY_SUMMARY",
          "COMMUNITY_ANNOUNCEMENTS",
          "PRODUCT_RECOMMENDATIONS",
          "CONTENT_RECOMMENDATIONS",
          "PERSONALIZED_OFFERS",
          "SURVEY_FEEDBACK_REQUEST",
          "SOCIAL_ENGAGEMENT_NOTIFICATIONS",
          "USER_ONBOARDING_WELCOME",
          "TUTORIALS_TIPS",
          "ANNIVERSARY_BIRTHDAY_GREETINGS",
          "HOLIDAY_GREETINGS",
          "ACCOUNT_MILESTONE_REMINDER",
          "SEASONAL_CONTENT_SUGGESTIONS",
          "EVENT_REGISTRATION_CONFIRMATION",
          "NEW_CONTENT_LAUNCH_ALERT",
          "REWARDS_PROGRAM_UPDATE",
          "RE_ENGAGEMENT_CAMPAIGNS",
          "CART_ABANDONMENT_REMINDER",
          "PRODUCT_BACK_IN_STOCK_ALERT",
          "DISCOUNTS_FOR_INACTIVE_USERS",
          "COMMUNITY_BASED_NEWS",
          "FITNESS_GOAL_REMINDERS",
          "JOB_SUGGESTIONS"
        ]
      },
      "constant.PriorityType": {
        "type": "string",
        "enum": [
          "high",
          "medium",
          "low"
        ],
        "x-enum-varnames": [
          "HIGH",
          "MEDIUM",
          "LOW"
        ]
      },
      "constant.RetryCount": {
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-varnames": [
          "InitialRequest",
          "FirstRetry",
          "SecondRetry",
          "ThirdRetry"
        ]
      },
      "constant.StatusType": {
        "type": "string",
        "enum": [
          "accepted",
          "rejected",
          "success",
          "failed",
          "pending"
        ],
        "x-enum-varnames": [
          "ACCEPTED",
          "REJECTED",
          "SUCCESS",
          "FAILED",
          "PENDING"
        ]
      },
      "entity.ActivationRequest": {
        "required": [
          "active"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          }
        }
      },
      "entity.EmailMessage": {
        "required": [
          "from_email",
          "from_name",
          "merge_language",
          "subject",
          "to"
        ],
        "type": "object",
        "properties": {
          "from_email": {
            "type": "string"
          },
          "from_name": {
            "type": "string"
          },
          "global_merge_vars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.MergeVar"
            }
          },
          "merge_language": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.EmailRecipient"
            }
          }
        }
      },
      "entity.EmailNotificationRequest": {
        "required": [
          "message_category",
          "payload",
          "retry_enabled"
        ],
        "type": "object",
        "properties": {
          "message_category": {
            "$ref": "#/components/schemas/constant.MessageCategory"
          },
          "payload": {
            "$ref": "#/components/schemas/entity.EmailPayload"
          },
          "retry_enabled": {
            "type": "boolean"
          }
        }
      },
      "entity.EmailPayload": {
        "required": [
          "html",
          "sender",
          "subject",
          "to"
        ],
        "type": "object",
        "properties": {
          "html": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "template_fields": {
            "type": "object",
            "description": "Adding this fields for supporting templates",
            "allOf": [
              {
                "$ref": "#/components/schemas/entity.TemplateFields"
              }
            ]
          },
          "to": {
            "type": "string"
          }
        }
      },
      "entity.EmailRecipient": {
        "required": [
          "email",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "entity.GetOrganizationByIdResponse": {
        "required": [
          "organization"
        ],
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/entity.OrganizationUpdateResponse"
          }
        }
      },
      "entity.GetProductByIdResponse": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.OrganizationUpdateResponse"
            }
          },
          "product": {
            "$ref": "#/components/schemas/entity.ProductUpdateResponse"
          }
        }
      },
      "entity.MergeVar": {
        "required": [
          "content",
          "name"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "object"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "entity.Message": {
        "required": [
          "channel",
          "delivery_time",
          "message_id",
          "organization_id",
          "payload",
          "product_id",
          "receiver_id",
          "retry_count",
          "sender_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/constant.ChannelType"
          },
          "created_at": {
            "type": "string"
          },
          "delivery_time": {
            "type": "string"
          },
          "message_id": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/entity.NotificationEvent"
          },
          "product_id": {
            "type": "string"
          },
          "receiver_id": {
            "type": "string"
          },
          "retry_count": {
            "type": "integer"
          },
          "sender_id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/constant.StatusType"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "entity.NotificationEvent": {
        "required": [
          "Organization_id",
          "channel",
          "id",
          "message",
          "priority",
          "product_id",
          "recipient",
          "retry_enabled",
          "sender"
        ],
        "type": "object",
        "properties": {
          "Organization_id": {
            "type": "string"
          },
          "channel": {
            "$ref": "#/components/schemas/constant.ChannelType"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/constant.PriorityType"
          },
          "product_id": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "retry_count": {
            "$ref": "#/components/schemas/constant.RetryCount"
          },
          "retry_enabled": {
            "type": "boolean"
          },
          "sender": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "template_fields": {
            "$ref": "#/components/schemas/entity.TemplateFields"
          }
        }
      },
      "entity.OnboardingOrganizationRequest": {
        "required": [
          "organizations"
        ],
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.OrganizationRequestObj"
            }
          }
        }
      },
      "entity.OnboardingOrganizationResponse": {
        "required": [
          "organizations"
        ],
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.OrganizationResponseObj"
            }
          }
        }
      },
      "entity.OnboardingProductRequest": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.OrganizationRequestObj"
            }
          },
          "product": {
            "$ref": "#/components/schemas/entity.ProductRequestObj"
          }
        }
      },
      "entity.OnboardingProductResponse": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.OrganizationResponseObj"
            }
          },
          "product": {
            "$ref": "#/components/schemas/entity.ProductResponseObj"
          }
        }
      },
      "entity.OrganizationRequestObj": {
        "required": [
          "active",
          "name"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "entity.OrganizationResponseObj": {
        "required": [
          "active",
          "apiKey",
          "id",
          "name",
          "product_id"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          }
        }
      },
      "entity.OrganizationUpdateResponse": {
        "required": [
          "active",
          "id",
          "name",
          "product_id"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          }
        }
      },
      "entity.PaginatedMessages": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.Message"
            }
          },
          "page_size": {
            "type": "integer"
          },
          "total_items": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          }
        }
      },
      "entity.ProductRequestObj": {
        "required": [
          "active",
          "name"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "entity.ProductResponseObj": {
        "required": [
          "active",
          "apiKey",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "entity.ProductUpdateResponse": {
        "required": [
          "active",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "entity.PushNotificationRequest": {
        "required": [
          "message_category",
          "payload",
          "retry_enabled"
        ],
        "type": "object",
        "properties": {
          "message_category": {
            "$ref": "#/components/schemas/constant.MessageCategory"
          },
          "payload": {
            "$ref": "#/components/schemas/entity.PushPayload"
          },
          "retry_enabled": {
            "type": "boolean"
          }
        }
      },
      "entity.PushPayload": {
        "required": [
          "body",
          "sender",
          "title",
          "token"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "entity.Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "entity.ResponseError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "entity.ResponseMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        }
      },
      "entity.SMSPayload": {
        "required": [
          "body",
          "sender",
          "to"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "to": {
            "type": "string"
          }
        }
      },
      "entity.SmsNotificationRequest": {
        "required": [
          "message_category",
          "payload",
          "retry_enabled"
        ],
        "type": "object",
        "properties": {
          "message_category": {
            "$ref": "#/components/schemas/constant.MessageCategory"
          },
          "payload": {
            "$ref": "#/components/schemas/entity.SMSPayload"
          },
          "retry_enabled": {
            "type": "boolean"
          }
        }
      },
      "entity.TemplateContent": {
        "type": "object"
      },
      "entity.TemplateFields": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/entity.EmailMessage"
          },
          "template_content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity.TemplateContent"
            }
          },
          "template_name": {
            "type": "string"
          }
        }
      },
      "entity.UpdateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}